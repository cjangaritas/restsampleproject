buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'festivities-spring-boot'
    version =  '1.0.0-SNAPSHOT'
}

repositories {
    mavenCentral()
}


dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("junit:junit")

    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.apache.commons:commons-lang3:3.0")

//    compile("com.wordnik:swagger-annotations_2.10:1.3.0")

//    compile("de.flapdoodle.embed:de.flapdoodle.embed.mongo")
    compile("com.mangofactory:swagger-springmvc:0.9.5")

    compile("javax.inject:javax.inject:1")
    compile("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.6.3")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.mongodb:mongo-java-driver:3.2.0")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.0")

//    compile("org.codehaus.woodstox:woodstox-core-asl:4.4.1")

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}